{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "newStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "dnsNameForPublicIP": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "14.10",
            "allowedValues": [
                "14.04.2-LTS",
                "14.10",
                "15.04"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version. Allowed values: 14.04.2-LTS, 14.10, 15.04."
            }
        },
        "location": {
            "type": "string",
            "allowedValues": [
                "West US"
            ],
            "metadata": {
                "description": "Location where the virtual machine will be created"
            }
        },
        "vmSize": {
            "type": "string",
            "allowedValues": [
                "Standard_D1"
            ],
            "metadata": {
                "description": "Virtual machine size"
            }
        },
        "minecraftUser": {
            "type": "string",
            "metadata": {
                "description": "Your minecraft user name"
            }
        },
        "difficulty": {
            "type": "string",
            "defaultValue": "1",
            "allowedValues": [
                "0",
                "1",
                "2",
                "3"
            ],
            "metadata": {
                "description": "0 - Peaceful, 1 - Easy, 2 - Normal, 3 - Hard"
            }
        },
        "levelName": {
            "type": "string",
            "defaultValue": "world",
            "metadata": {
                "description": "Name of your world"
            }
        },
        "gameMode": {
            "type": "string",
            "defaultValue": "0",
            "allowedValues": [
                "0",
                "1",
                "2",
                "3"
            ],
            "metadata": {
                "description": "0 - Survival, 1 - Creative, 2 - Adventure, 3 - Spectator"
            }
        },
        "whiteList": {
            "type": "string",
            "defaultValue": "false",
            "allowedValues": [
                "false",
                "true"
            ],
            "metadata": {
                "description": "Only ops and whitelisted players can connect"
            }
        },
        "enableCommandBlock": {
            "type": "string",
            "defaultValue": "false",
            "allowedValues": [
                "false",
                "true"
            ],
            "metadata": {
                "description": "enable command blocks"
            }
        },
        "maxPlayers": {
            "type": "int",
            "defaultValue": 10,
            "metadata": {
                "description": "Maximum number of players allowed on this server"
            }
        },
        "allowFlight": {
            "type": "string",
            "defaultValue": "false",
            "allowedValues": [
                "false",
                "true"
            ],
            "metadata": {
                "description": "Toggle to prevent flying mods from working. If you want to enable flying, install a flying mod on the server and set this to 'true'."
            }
        },
        "spawnProtection": {
            "type": "int",
            "defaultValue": 16,
            "metadata": { 
                "description": "This means that other players will not be able to place blocks or build in a 16-block radius from your spawn point. Ops are not affected by this rule."
            }
        },
        "spawnMonsters": {
            "type": "string",
            "defaultValue": "true",
            "allowedValues": [
                "false",
                "true"
            ],
            "metadata": {
                "description": "Enables monster spawning"
            }
        },
        "generateStructures": {
            "type": "string",
            "defaultValue": "true",
            "allowedValues": [
                "false",
                "true"
            ],
            "metadata": {
                "description": "Generates villages etc."
            }
        },
        "levelSeed": {
            "type": "string",
            "defaultValue": " ",
            "metadata": {
                "description": "Add a seed for your world"
            }
        }
    },
    "variables": {
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "OSDiskName": "osdiskforlinuxsimple",
        "nicName": "myVMNic",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "Subnet",
        "subnetPrefix": "10.0.0.0/24",
        "storageAccountType": "Standard_LRS",
        "publicIPAddressType": "Dynamic",
        "vmStorageAccountContainerName": "vhds",
        "vmName": "BukkitServerVM",
        "virtualNetworkName": "MyVNET",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('newStorageAccountName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "StorageAccount"
            },
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('dnsNameForPublicIP')]",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
                }
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "NetworkInterface"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('dnsNameForPublicIP'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('dnsNameForPublicIP'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "VirtualMachine"
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computername": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            }
        },
        { 
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),'/installserverscript')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                            "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
                         ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.2",
                "settings": {
                        "fileUris": [
                            "https://rprakashg.blob.core.windows.net/scripts/install.sh"
                        ],
                        "commandToExecute": "[concat('sh install.sh ', parameters('minecraftUser'), ' ', parameters('difficulty'), ' ', parameters('levelName'), ' ', parameters('gameMode'), ' ', parameters('whiteList'), ' ', parameters('enableCommandBlock'), ' ', parameters('maxPlayers'), ' ', parameters('allowFlight'), ' ', parameters('spawnProtection'), ' ', parameters('spawnMonsters'), ' ', parameters('generateStructures'), ' ', parameters('levelSeed'))]"
                }
            }
        }
    ]
}
